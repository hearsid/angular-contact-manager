{"version":3,"sources":["app.js","controller.js","router.js","services.js"],"names":["angular","module","this","ContactsController","scope","ContactsService","$state","$rootScope","vm","getContacts","then","response","contacts","data","error","addContact","name","email","tel","push","id","length","go","editContact","i","contact","userId","deleteContact","index","splice","$on","event","toState","toParams","fromState","fromParams","controller","$inject","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","$scope","title","$http","$location","theObject","no_of_contacts","search","contactsPromise","get","factory"],"mappings":"CAAA,SAAAA,GACA,YAEAA,GAAAC,OAAA,OACA,YACA,eAEAC,KAAAF,SCPA,SAAAA,GACA,YAKA,SAAAG,GAAAC,EAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAAN,IAGAG,GAAAI,cACAC,KAAA,SAAAC,GACAH,EAAAI,SAAAD,EAAAE,MACA,SAAAC,MAYAV,EAAAW,WAAA,SAAAC,EAAAC,EAAAC,GAEA,GAAAF,GAAAA,EACAC,EAAAA,EACAC,EAAAA,CACAV,GAAAI,SAAAO,MAAAC,GAAAZ,EAAAI,SAAAS,OAAA,EAAAL,KAAAA,EAAAC,MAAAA,EAAAC,IAAAA,IACAZ,EAAAgB,GAAA,SAGAlB,EAAAmB,YAAA,SAAAH,EAAAJ,EAAAC,EAAAC,GAEA,IAAA,GAAAM,KAAAhB,GAAAI,SAAA,CACA,GAAAa,GAAAjB,EAAAI,SAAAY,GACAE,EAAAD,EAAAL,EAEAM,IAAAN,IAEAK,EAAAT,KAAAA,EACAS,EAAAR,MAAAA,EACAQ,EAAAP,IAAAA,GAIAZ,EAAAgB,GAAA,SAGAlB,EAAAuB,cAAA,SAAAC,GACApB,EAAAI,SAAAiB,OAAAD,EAAA,IAIArB,EAAAuB,IAAA,oBACA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAKA,GAAA,SAAAH,EAAAhB,KAAA,CAGA,GAAAI,GAAAa,EAAAb,EAGA,KAAA,GAAAI,KAAAhB,GAAAI,SAAA,CACA,GAAAc,GAAAlB,EAAAI,SAAAY,GAAAJ,EAEA,IAAAA,GAAAM,EAAA,CAEA,GAAAD,GAAAjB,EAAAI,SAAAY,EACApB,GAAAY,KAAAS,EAAAT,KACAZ,EAAAa,MAAAQ,EAAAR,MACAb,EAAAc,IAAAO,EAAAP,IACAd,EAAAgB,GAAAK,EAAAL,QA5EApB,EAAAC,OAAA,OACAmC,WAAA,qBAAAjC,GAEAA,EAAAkC,SAAA,SAAA,kBAAA,SAAA,eAiFAnC,KAAAF,SCtFA,SAAAA,GAEAA,EAAAC,OAAA,OACAqC,OAAA,SAAAC,EAAAC,GAGAA,EAAAC,UAAA,KAGAF,EACAG,MAAA,QACAC,IAAA,IACAC,YAAA,oCAEAF,MAAA,QACAC,IAAA,YACAC,YAAA,qCACAR,WAAA,SAAAS,GACAA,EAAAC,MAAA,UAMAJ,MAAA,OACAC,IAAA,OACAC,YAAA,qCACAR,WAAA,SAAAS,GACAA,EAAAC,MAAA,MACAD,EAAA7B,KAAA,GACA6B,EAAA5B,MAAA,GACA4B,EAAA3B,IAAA,SASAhB,KAAAF,SCxCA,SAAAA,GACA,YAMA,SAAAK,GAAA0C,EAAAC,GAEA,GAAAC,IAIArC,WAEAQ,GAAA,EACAJ,KAAA,uBACAE,IAAA,eACAD,MAAA,gCAGAG,GAAA,EACAJ,KAAA,mBACAE,IAAA,eACAD,MAAA,6BAGAG,GAAA,EACAJ,KAAA,qBACAE,IAAA,eACAD,MAAA,gCAGAG,GAAA,EACAJ,KAAA,mBACAE,IAAA,eACAD,MAAA,4BAGAG,GAAA,EACAJ,KAAA,iBACAE,IAAA,eACAD,MAAA,2BAGAG,GAAA,EACAJ,KAAA,sBACAE,IAAA,eACAD,MAAA,oCAKAR,YAAA,WACA,GAAAyC,GAAAF,EAAAG,SAAAD,eACAP,EAAA,oDAAAO,EACAE,EAAAL,EAAAM,IAAAV,EACA,OAAAS,IAIA,OAAAH,GA1DAjD,EAAAC,OAAA,OACAqD,QAAA,kBAAAjD,GAEAA,EAAAgC,SAAA,QAAA,cA0DAnC,KAAAF","file":"../bundle.min.js","sourcesContent":["(function(angular) {\n    'use strict';\n\n    angular.module('app' ,\n        ['ui.router' ,\n        'ngAnimate']);\n\n})(this.angular);","(function (angular) {\n    'use strict';\n    angular.module('app')\n        .controller('ContactsController', ContactsController);\n\n    ContactsController.$inject = ['$scope', 'ContactsService', '$state', '$rootScope'];\n    function ContactsController(scope, ContactsService, $state, $rootScope) {\n\n        var vm = this;\n        // scope.contacts = vm.contacts = ContactsService.contacts;\n\n        ContactsService.getContacts()\n            .then(function(response) {\n              vm.contacts = response.data ;    \n            }, function(error) {\n\n            });\n\n        /*    scope.submit = function(title , id) {\n         if(title == 'Add') {\n         scope.addContact() ;\n         }\n         else {\n         scope.editContact(id);\n         }\n         };*/\n        scope.addContact = function (name, email, tel) {\n\n            var name = name;\n            var email = email;\n            var tel = tel;\n            vm.contacts.push({id: (vm.contacts.length + 1), name: name, email: email, tel: tel});\n            $state.go('home');\n        };\n\n        scope.editContact = function (id, name, email, tel) {\n\n            for (var i in vm.contacts) {\n                var contact = vm.contacts[i];\n                var userId = contact.id;\n\n                if (userId == id) {\n\n                    contact.name = name;\n                    contact.email = email;\n                    contact.tel = tel;\n                }\n            }\n\n            $state.go('home');\n        };\n\n        scope.deleteContact = function (index) {\n            vm.contacts.splice(index, 1);\n        };\n\n\n        $rootScope.$on('$stateChangeStart',\n            function (event, toState, toParams, fromState, fromParams) {\n                // transitionTo() promise will be rejected with\n                // a 'transition prevented' error\n\n\n                if (toState.name !== 'edit')\n                    return;\n\n                var id = toParams.id;\n\n\n                for (var i in vm.contacts) {\n                    var userId = vm.contacts[i].id ;\n\n                    if(id == userId) {\n\n                        var contact = vm.contacts[i];\n                        scope.name = contact.name;\n                        scope.email = contact.email;\n                        scope.tel = contact.tel;\n                        scope.id = contact.id;\n\n                    }\n                }\n            });\n\n    }\n\n})(this.angular);\n","(function(angular) {\n\n    angular.module('app')\n        .config(function($stateProvider, $urlRouterProvider) {\n            //\n            // For any unmatched url, redirect to /state1\n            $urlRouterProvider.otherwise(\"/\");\n            //\n            // Now set up the states\n            $stateProvider\n                .state('home', {\n                    url: \"/\",\n                    templateUrl: \"app/templates/contacts.tpl.html\"\n                })\n                .state('edit', {\n                    url: \"/edit/:id\",\n                    templateUrl: \"app/templates/new-contact.tpl.html\" ,\n                    controller : function ($scope ) {\n                        $scope.title = \"Edit\";\n\n\n                    }\n\n                })\n                .state('add', {\n                    url: \"/add\",\n                    templateUrl: \"app/templates/new-contact.tpl.html\" ,\n                    controller : function ($scope) {\n                        $scope.title = \"Add\";\n                        $scope.name = \"\";\n                        $scope.email = \"\";\n                        $scope.tel = \"\";\n                    }\n                })\n\n        });\n\n\n\n\n})(this.angular) ;","(function(angular) {\n    'use strict';\n\n    angular.module('app')\n        .factory('ContactsService' , ContactsService) ;\n\n    ContactsService.$inject = ['$http', '$location'];\n    function ContactsService($http, $location) {\n\n        var theObject = {\n\n\n            // store some predefined contacts for now\n            contacts: [\n                {\n                    id: 1,\n                    name : 'Terrence S. Hatfield',\n                    tel: '651-603-1723',\n                    email: 'TerrenceSHatfield@rhyta.com'\n                },\n                {\n                    id: 2,\n                    name : 'Chris M. Manning',\n                    tel: '513-307-5859',\n                    email: 'ChrisMManning@dayrep.com'\n                },\n                {\n                    id: 3,\n                    name : 'Ricky M. Digiacomo',\n                    tel: '918-774-0199',\n                    email: 'RickyMDigiacomo@teleworm.us'\n                },\n                {\n                    id: 4,\n                    name : 'Michael K. Bayne',\n                    tel: '702-989-5145',\n                    email: 'MichaelKBayne@rhyta.com'\n                },\n                {\n                    id: 5,\n                    name : 'John I. Wilson',\n                    tel: '318-292-6700',\n                    email: 'JohnIWilson@dayrep.com'\n                },\n                {\n                    id: 6,\n                    name : 'Rodolfo P. Robinett',\n                    tel: '803-557-9815',\n                    email: 'RodolfoPRobinett@jourrapide.com'\n                }\n            ] ,\n\n            // make a get call here to get the contacts\n            getContacts : function() {\n              var no_of_contacts = $location.search().no_of_contacts;\n              var url = 'http://localhost:3000/getContacts?no_of_contacts='+no_of_contacts;\n              var contactsPromise = $http.get(url);\n              return contactsPromise;\n            }\n        };\n\n        return theObject ;\n    }\n\n})(this.angular);\n"]}